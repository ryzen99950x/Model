@using Microsoft.AspNetCore.Identity
@using ShoppingSite.Models;
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@model ShoppingSite.Models.Products

@{
    ViewData["Title"] = "Details";
}
<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            margin-top: 400px;
            background-image: url('/img/background.jpg');
            background-color: rgba(255, 255, 255, 0.85);
            background-blend-mode: lighten;
            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;
        }

        .detail-container {
            background-color: white;
            padding: 30px;
            margin: auto;
            max-width: 1000px; 
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.4); 
        }

        .product-image {
            width: 100%;
            max-height: 1000px; /* 商品画像の最大高さ */
            object-fit: cover; /* 画像の比率を維持して親要素にフィット */
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        }

        h1, h2 {
            text-align: center;
            color: #333333; 
        }

        .details-list dt {
            font-weight: bold;
            margin-top: 15px;
        }

        .details-list dd {
            margin-left: 0;
            margin-bottom: 10px;
            padding-left: 20px;
            border-left: 2px solid lightgray; 
        }

            .edit-link:hover {
                text-decoration: underline;
            }

        .form-select {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            border: 1px solid white;
            border-radius: 5px;
            background-color: white;
        }

        .star5_rating {
            position: relative;
            z-index: 0;
            display: inline-block;
            white-space: nowrap;
            color: #CCCCCC; 
            
        }

        .star5_rating:before, .star5_rating:after {
            content: '★★★★★';
            padding: 0px;
        }

        .star5_rating:after {
            position: absolute;
            z-index: 1;
            top: 0;
            left: 0;
            overflow: hidden;
            white-space: nowrap;
            color: #ffcf32;
        }
        .star5_rating[data-rate="5"]:after {
            width: 100%;
        }
        .star5_rating[data-rate="4"]:after {
            width: 80%;
        }
        .star5_rating[data-rate="3"]:after {
            width: 60%;
        }
        .star5_rating[data-rate="2"]:after {
            width: 40%;
        }
        .star5_rating[data-rate="1"]:after {
            width: 20%;
        }

        .cart-img:hover {
            opacity: 0.7;
            animation: rotate 1.2s linear infinite;
        }

        @@keyframes rotate {
            from {
                transform: rotate(0deg);
            }

            to {
                transform: rotate(360deg);
            }
        }

        .select-box{
            background-color: whitesmoke;
        }
        .review-box{
            border: 1px dashed #ccc;
            padding: 10px;
            margin-bottom: 10px;
            background-color: #f5fffa;
            border-radius: 10px;
        }
    </style>
</head>
<body>
    <div class="detail-container">
        <div class="row">
            <div class="col-md-12 text-center mb-4">
                <img src="~/@Html.DisplayFor(model => model.Image)" alt="Product Image" class="product-image">
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="container-fluid">
                    <h2>@Html.DisplayFor(model => model.Name)</h2>
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <div>
                            <h3>価格: ￥@Html.DisplayFor(model => model.Price)</h3>
                            <h3>在庫数: 残り @Html.DisplayFor(model => model.Stock)個</h3>
                        </div>
                        <form asp-action="AddCart" class="d-flex">
                            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                            <input type="hidden" asp-for="Id" />
                            <input type="hidden" name="userId" value="@UserManager.GetUserId(User)" />
                            <button type="submit" class="text-dark d-flex align-items-center" style="background: none; border: none; cursor: pointer;">
                                <span class="me-2">カートに追加</span>
                                <img class="img-fluid img-50 cart-img" src="~/img/cart.svg" alt="cart">
                            </button>
                        </form>


                        
                    </div>
                </div>

                <select id="infoSelect" class="form-select mb-3 select-box">
                    <option value="description">説明</option>
                    <option value="size">サイズ</option>
                    <option value="weight">重さ</option>
                    <option value="material">素材</option>
                    <option value="limited">限定</option>
                    <option value="package">パッケージ</option>
                    <option value="category">カテゴリ</option>
                    <option value="review">レビュー</option>
                    <option value="gender">性別</option>
                </select>

                <div id="infoDetails" class="details-list">
                    <dl class="row select-details-list">
                        <dd id="description" class="col-sm-9">@Html.DisplayFor(model => model.Description)</dd>
                        <dd id="size" class="col-sm-9">@Html.DisplayFor(model => model.Size) [cm]</dd>
                        <dd id="weight" class="col-sm-9">@Html.DisplayFor(model => model.Weight) [g]</dd>
                        <dd id="material" class="col-sm-9">@Html.DisplayFor(model => model.Material)</dd>
                        <dd id="limited" class="col-sm-9">
                            @if (Model.Limited == 1)
                            {
                                 <p>限定品です</p>
                            }
                            else
                            {
                                <p>通常商品です</p>
                            }
                        </dd>
                        <dd id="package" class="col-sm-9">
                            @if (Model.Package == "1")
                            {
                                <p>紙袋のショッパー</p>
                            }
                            else
                            {
                                <p>ギフト専用パッケージ</p>
                            }
                        </dd>
                        <dd id="category" class="col-sm-9">@Html.DisplayFor(model => model.Category.CategoryName)</dd>
                        <dd id="review" class="col-sm-9">
                            <form asp-action="CreateReview" >
                                <div class="form-group">
                                    <label name="comment" class="control-label">レビュー記入欄</label>
                                    <textarea id="review-comment" name="comment" class="form-control" placeholder="レビューをご記入ください"></textarea>
                                    <input type="hidden" asp-for="Id" />
                                    <input type="hidden" name="userId" value="@UserManager.GetUserId(User)" />
                                    <label>星の評価を選んでください:</label><br>
                                    <input type="radio" id="star1" name="rating" value="1">
                                    <label for="star1">星1 <span class="star5_rating" data-rate="1"></span></label><br>
                                    <input type="radio" id="star2" name="rating" value="2">
                                    <label for="star2">星2 <span class="star5_rating" data-rate="2"></span></label><br>
                                    <input type="radio" id="star3" name="rating" value="3">
                                    <label for="star3">星3 <span class="star5_rating" data-rate="3"></span></label><br>
                                    <input type="radio" id="star4" name="rating" value="4">
                                    <label for="star4">星4 <span class="star5_rating" data-rate="4"></span></label><br>
                                    <input type="radio" id="star5" name="rating" value="5">
                                    <label for="star5">星5 <span class="star5_rating" data-rate="5"></span></label><br>
                                    <button type="submit" class="nav-link btn btn-link text-dark" onclick="return validateReviewForm()">
                                        <img class="img-fluid img-100" src="~/img/review.svg" alt="lgout">
                                    </button>
                                </div>
                            </form>
                            <br />
                            <p>投稿されたレビュー</p>
                            @if (Model.Review != null && Model.Review.Any())
                            {
                                foreach (var review in Model.Review)
                                {
                                    <div class="review-box">
                                        <p>投稿者</p>
                                        @Html.DisplayFor(model => review.User.UserName)
                                        <p>評価</p>
                                        <span class="star5_rating" data-rate="@review.Rating"></span>
                                        <br />
                                        <p>コメント</p>
                                        @Html.DisplayFor(model => review.Comment)
                                        <br />
                                        <br />
                                    </div>
                                }
                            }
                            else
                            {
                            <dd class="col-sm-9">レビューはまだありません。</dd>
                            }
                            <dd class="col-sm-9">レビューはまだありません。</dd>
                        </dd>
                       
                        @if (Model.Gender.GenderName == "ユニセックス")
                        {
                            <dd id="gender" class="col-sm-9">どなたでもご利用いただけます</dd>
                        }
                        else
                        {
                            <dd id="gender" class="col-sm-9">@Html.DisplayFor(model => model.Gender.GenderName)向け商品</dd>
                        }
                        
                    </dl>
                </div>
            </div>
        </div>
    </div>
    <script>

        // 表示をまずは消す
        document.addEventListener("DOMContentLoaded", function () {
            var selectBox = document.getElementById("infoSelect");
            var detailsDiv = document.getElementById("infoDetails");
            var allDetails = detailsDiv.getElementsByTagName("dd");
            Array.prototype.forEach.call(allDetails, function (detail) {
                detail.style.display = "none";
            });

            // 初期表示でDescriptionを表示
            document.getElementById("description").style.display = "block";
            // セレクトボックスの変更イベントのリスナー登録
            selectBox.addEventListener("change", function () {
                var selectedOption = this.value;
                // 配列でないオブジェクトのforeach
                Array.prototype.forEach.call(allDetails, function (detail) {
                    // 詳細情報を切り替える
                    if (detail.id === selectedOption) {
                        detail.style.display = "block";
                    } else {
                        detail.style.display = "none";
                    }
                });
            });
        });
        // レビューの入力
        function validateReviewForm() {
            var comment = document.getElementById('review-comment').value;
            var ratings = document.querySelectorAll('input[name="rating"]');
            var rating = 0;
            for (var i = 0; i < ratings.length; i++) {
                if (ratings[i].checked) {
                    rating = ratings[i].value;
                    break;
                }
            }
            if (comment.length < 10 && rating == 0) {
                alert('レビューは少なくとも10文字以上で入力してください。\n評価を5段階でつけてください');
                return false;
            }
            else if (comment.length < 10) {
                alert('レビューは少なくとも10文字以上で入力してください。');
                return false;
            }
            else if (rating == 0) {
                alert('評価を5段階でつけてください');
                return false;
            }
            return true;
        }

    </script>
</body>
</html>
